# korean-kaistx_kaist <- udpipe(x = "한국어를 사용하겠습니다.",object = udmodel_kaist)text_postagged_kaist <- paste(x_kaist$token, "_", x_kaist$upos, collapse = " ", sep = ""); text_postagged_kaisttext_postagged_kaist2 <- paste(x_kaist$lemma, "_", x_kaist$xpos, collapse = " ", sep = ""); text_postagged_kaist2library(stringr)sentenceKaist <- "한국어+를_ncn+jco 사용하+겠+습니다_pvg+ep+ef ._sf"; sentenceKaistinputWords <- unlist(strsplit(sentenceKaist, split=" ")); inputWordsoutSentence <- ""for (i in 1:length(inputWords)){  # print(inputWords[i])  words <- unlist(strsplit(inputWords[i], split="_"))[1]  # print(words)  posTags <- unlist(strsplit(inputWords[i], split="_"))[2]  # print(posTags)  innerWord <- ""  if(str_detect(words, "\\+")==TRUE){    wordEach <- unlist(strsplit(words, split="\\+"))    posTagEach <- unlist(strsplit(posTags, split="\\+"))    print(wordEach)    for (j in 1:length(wordEach)){      innerWord <- paste(innerWord, wordEach[j], "/", posTagEach[j], " ", collapse = " ", sep = "")    }  } else {    innerWord <- paste(words, "/", posTags, " ", collapse = " ", sep = "")  }    if (i == length(inputWords)){    innerWord <- gsub("\\s$", "", innerWord)  }    outSentence <- paste(outSentence, innerWord, collapse = " ", sep = "")}print(outSentence)